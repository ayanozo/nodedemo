<!DOCTYPE html>
<html lang="ja" ng-app>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
	<style type="text/css">
		table {
			border: 0px;
		}
		table td {
			width:20%;
		}
		/* --- 見出しセル --- */
		.tableHeader {
			background-color: #deefff; /* 見出しセルの背景色 */
			width:20%;
		}
	</style>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.13/angular.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script type="text/javascript">
	  function mainCtrl($scope) {
	    var socket = io.connect();
	
	    $scope.connectId = '';
	    $scope.socketName = '';
	    $scope.connectCount = 0;
	    $scope.message = '';
	    $scope.msgtext = '';
	    $scope.loopCount = 0;
	    $scope.loopTime = 0;
	    $scope.loopAve = 0;
	    $scope.redisCount = 0;

		var startTime;
		var currentTime;
	
		// 接続したとき
	    socket.on('connect', function () {
			$scope.connectId = socket.socket.transport.sessid;
			$scope.socketName = socket.socket.transport.name;
	    	socket.emit('msg_connect', 0);
			$scope.$apply();
	    });
	
		// 接続メッセージを受けたとき
	    socket.on('msg_connect', function (msg) {
	      $scope.connectCount = msg;
	      $scope.$apply();
	    });
	
		// メッセージを受けたとき
	    socket.on('msg_message', function (msg) {
	      $scope.message = msg;
	      $scope.$apply();
	    });
	
		// ループテストメッセージを受けたとき
	    socket.on('msg_looptest', function (msg) {
	    	cuurentTime = new Date();
	    	var ave = $scope.loopCount / ((cuurentTime - startTime) / 1000);
	    	$scope.loopAve = Math.floor(ave * 10) / 10
			$scope.loopCount = msg;
			$scope.$apply();
	    	var btn = $("#loopButton").val();
	    	if (btn == "ストップ") {
		    	socket.emit('msg_looptest', $scope.loopCount);
	    	}
	    });

		// redisテストメッセージを受けたとき
	    socket.on('msg_redistest', function (msg) {
	      $scope.redisCount = msg;
	      $scope.$apply();
	    });

		// メッセージを送る
	    $scope.send = function send() {
	      console.log('Sending message:', $scope.msgtext);
	      socket.emit('msg_message', $scope.msgtext);
	      $scope.msgtext = '';
	    };

		// ループテスト開始
	    $scope.LoopTestSatrt = function LoopTestSatrt() {
	    	var btn = $("#loopButton").val();
	    	if (btn == "スタート") {
	      		$("#loopButton").val("ストップ");
			    startTime = new Date();
			    $scope.loopCount = 0;
		    	socket.emit('msg_looptest', $scope.loopCount);
	    	} else {
	      		$("#loopButton").val("スタート");
	    	}
	    };

		// RADISテスト開始
	    $scope.RedisTestSatrt = function RedisTestSatrt() {
	    	socket.emit('msg_redistest', 0);
	    };
	    
	  }
	</script>
  </head>
  <body>
  <h1>socket.ioのサンプルプログラム</h1>
  <br>
  <div ng-controller="mainCtrl">
  	<form ng-submit="send()">
		<table>
		  	<tr>
		  		<td class="tableHeader">ID</td>
		  		<td ng-bind="connectId"></td>
		  	</tr>
		  	<tr>
		  		<td class="tableHeader">TYPE</td>
		  		<td ng-bind="socketName"></td>
		  	</tr>
		  	<tr>
		  		<td class="tableHeader">接続数</td>
		  		<td ng-bind="connectCount"></td>
		  	</tr>
		  	<tr>
		  		<td class="tableHeader">メッセージ送信テスト</td>
		  		<td colspan=2>
			  		<input type="text" ng-model="msgtext">
					<input type="submit" value="メッセージを送る">
			  		<td ng-bind="message"></td>
		  		</td>
		  	</tr>
		  	<tr>
		  		<td class="tableHeader">ループカウントテスト</td>
		  		<td>
			  		<input id="loopButton" type="button" value="スタート" ng-click="LoopTestSatrt()">
		  		</td>
		  		<td ng-bind="loopCount"></td>
		  		<td >平均時間:{{loopAve}}</td>
		  	</tr>
		  	<tr>
		  		<td class="tableHeader">redisテスト</td>
		  		<td>
			  		<input id="redisButton" type="button" value="送信" ng-click="RedisTestSatrt()">
		  		</td>
		  		<td ng-bind="redisCount"></td>
		  	</tr>
		  </table>
	</form>
  </div>
  </body>
</html>
